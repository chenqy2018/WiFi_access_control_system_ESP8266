---- g_node_list Matches (22 in 1 files) ----
Mesh_device.c (d:\vm\...\demo):17
static struct mesh_device_list_type g_node_list;

void ICACHE_FLASH_ATTR
Mesh_device.c (d:\vm\...\demo):24
    if (g_node_list.scale < 1)
        return;

Mesh_device.c (d:\vm\...\demo):28
    MESH_DEMO_PRINT("root: " MACSTR "\n", MAC2STR(g_node_list.root.mac));
    if (g_node_list.scale < 2)
        return;
    for (idx = 0; idx < g_node_list.scale - 1; idx ++)
        MESH_DEMO_PRINT("idx:%d, " MACSTR "\n", idx, MAC2STR(g_node_list.list[idx].mac));
    MESH_DEMO_PRINT("=====mac list end======\n");
}
Mesh_device.c (d:\vm\...\demo):48
    if (g_node_list.scale < 2) {
        *list = NULL;
        *count = 0;
Mesh_device.c (d:\vm\...\demo):54
    *list = g_node_list.list;
    *count = g_node_list.scale - 1;
    return true;
}
Mesh_device.c (d:\vm\...\demo):67
    if (g_node_list.scale == 0) {
        MESH_DEMO_PRINT("no mac in current mac list\n");
        return false;
Mesh_device.c (d:\vm\...\demo):75
    *root = &g_node_list.root;

    return true;
Mesh_device.c (d:\vm\...\demo):85
    if (g_node_list.list != NULL) {
        MESH_DEV_FREE(g_node_list.list);
        g_node_list.list = NULL;
    }
    MESH_DEV_MEMSET(&g_node_list, 0, sizeof(g_node_list));
}

Mesh_device.c (d:\vm\...\demo):97
    MESH_DEV_MEMSET(&g_node_list, 0, sizeof(g_node_list));
    g_mesh_device_init = true;
}
Mesh_device.c (d:\vm\...\demo):109
    if (g_node_list.scale == 0) {
        MESH_DEMO_PRINT("new root:" MACSTR "\n", MAC2STR((uint8_t *)root));
        MESH_DEV_MEMCPY(&g_node_list.root, root, sizeof(*root));
        g_node_list.scale = 1;
        return;
    }
Mesh_device.c (d:\vm\...\demo):120
    if (!MESH_DEV_MEMCMP(&g_node_list.root, root, sizeof(*root)))
        return;

Mesh_device.c (d:\vm\...\demo):128
            MAC2STR((uint8_t *)&g_node_list.root), MAC2STR((uint8_t *)root));
    mesh_device_list_release();
    MESH_DEV_MEMCPY(&g_node_list.root, root, sizeof(*root));
    g_node_list.scale = 1;
}

Mesh_device.c (d:\vm\...\demo):141
    if (g_node_list.scale == 0)
        return false;
    if (!MESH_DEV_MEMCMP(&g_node_list.root, node, sizeof(*node)))
        return true;
    if (g_node_list.list == NULL)
        return false;

    scale = g_node_list.scale - 1;
    list = g_node_list.list;

    for (i = 0; i < scale; i ++) {
Mesh_device.c (d:\vm\...\demo):164
    uint16_t rest = g_node_list.size + 1 - g_node_list.scale;

    if (!g_mesh_device_init)
Mesh_device.c (d:\vm\...\demo):169
    if (g_node_list.size == 0)
        rest = 0;

Mesh_device.c (d:\vm\...\demo):177
        uint16_t size = g_node_list.size + rest + MESH_DEV_STEP;
        uint8_t *buf = (uint8_t *)MESH_DEV_ZALLOC(size * sizeof(*nodes));
        if (!buf) {
Mesh_device.c (d:\vm\...\demo):186
        if (g_node_list.list && g_node_list.scale > 1)
            MESH_DEV_MEMCPY(buf, g_node_list.list,
                    (g_node_list.scale - 1) * sizeof(*nodes));
        if (g_node_list.list)
            MESH_DEV_FREE(g_node_list.list);
        g_node_list.list = (struct mesh_device_mac_type *)buf;
        g_node_list.size = size;
    }

Mesh_device.c (d:\vm\...\demo):197
            MESH_DEV_MEMCPY(g_node_list.list + g_node_list.scale - 1,
                    nodes + idx, sizeof(*nodes));
            g_node_list.scale ++;
        }
        idx ++;
Mesh_device.c (d:\vm\...\demo):210
    uint16_t sub_count = g_node_list.scale - 1;

    if (!nodes || count == 0)
Mesh_device.c (d:\vm\...\demo):218
    if (g_node_list.scale == 0)
        return false;

Mesh_device.c (d:\vm\...\demo):233
        if (!MESH_DEV_MEMCMP(nodes + idx, &g_node_list.root, sizeof(*nodes))) {
            mesh_device_list_release();
            return true;
Mesh_device.c (d:\vm\...\demo):242
            if (!MESH_DEV_MEMCMP(nodes + idx, &g_node_list.list[i], sizeof(*nodes))) {
                if (sub_count - i  > 1)
                    MESH_DEV_MEMCPY(&g_node_list.list[i], &g_node_list.list[i + 1],
                            (sub_count - i - 1) * sizeof(*nodes));
                sub_count --;
                g_node_list.scale --;
                i --;
                MESH_DEV_MEMSET(&g_node_list.list[g_node_list.scale], 0, sizeof(*nodes));
                break;
            }
